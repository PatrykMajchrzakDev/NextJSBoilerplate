// =================================================
// ============== THIS IS ROOT LAYOUT ==============
// =================================================

import type { Metadata } from "next";
import "./globals.css";
import { Toaster } from "@/components/ui/toaster";
// import { Roboto } from "next/font/google";
import { ThemeProvider } from "@/context/theme-provider";
import QueryProvider from "@/context/query-provider";
import localFont from "next/font/local";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// Font used
// const roboto = Roboto({ subsets: ["latin"], weight: "400" });

// Metadata
export const metadata: Metadata = {
  title: "NextJSBoilerplate",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      {/*<body className={`bg-background ${roboto.className} antialiased`}>*/}
      <body
        className={`bg-background $${geistSans.variable} ${geistMono.variable} antialiased fluid-text`}
      >
        <QueryProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="light"
            enableSystem={false}
            disableTransitionOnChange
          >
            {children}
            <Toaster />
          </ThemeProvider>
          {/* Show ReactQueryDevTools if there is DEV */}
          {process.env.NEXT_ENV === "development" && <ReactQueryDevtools />}
        </QueryProvider>
      </body>
    </html>
  );
}
